<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="643" creationComplete="init()" height="554" title="Add a Job" fontSize="34" horizontalScrollPolicy="off" verticalScrollPolicy="on" fontFamily="Times New Roman" verticalAlign="middle" horizontalAlign="center">
			<mx:TextInput x="161" y="8" width="438" height="31" fontSize="18" id="jobcompany"/>
			<mx:Label x="10" y="10" text="Company:" height="31" width="119" fontSize="18"/>
			<mx:Label x="10" y="49" text="Title:" id="sizeref" fontSize="18" height="32"/>
			<mx:TextInput x="161" y="47" width="438" height="34" fontSize="18" id="jobtitle"/>
			<mx:Text x="10" y="129" text="Requirements &#xd;for Application:" width="143" height="109" fontSize="18" textAlign="left"/>
			<mx:Button x="10" y="330" id = "addbutton" label="Add Field" fontSize="18" click="addField()" width="143"/>
			<mx:DateField showToday = "true" x="161" y="89" height="32" fontSize="18" id="jobdeadline" width="156"/>
			<mx:Label x="10" y="91" text="Deadline:" width="97" height="32" fontSize="18"/>
						
		<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.containers.VBox;
			import mx.core.Application;
			import mx.core.WindowedApplication;
			import mx.containers.Canvas;
			import mx.containers.ViewStack;
			import mx.controls.Tree;
			import mx.controls.Spacer;
			import flash.text.engine.SpaceJustifier;
			import mx.containers.ControlBar;
			import mx.containers.Panel;
			import mx.controls.DateChooser;
			import mx.controls.Text;
			import mx.controls.List;
			import mx.controls.ComboBox;
			import model.Doc;
			import model.Job;
			import mx.managers.PopUpManager;
			import mx.binding.utils.BindingUtils;
			private var dropdown:ComboBox = new ComboBox();
			[Bindable] private var nameInput:TextInput = new TextInput();
			public var fieldlist:Array= new Array("Interview Date","Notes");
			private var OKButton:Button = new Button();
			private var CancelFieldButton:Button = new Button();
			[Bindable] public var docTree:Tree;
			private var getDoc:Panel = new Panel();
			[Bindable] public var docs:ArrayCollection=new ArrayCollection();		

			public var input:TextArea = new TextArea();
			public var datechoose:DateField=new DateField();
			public var Pinput:TextInput = new TextInput();
			public var Tinput:TextInput = new TextInput();
			
			private function init():void{

				dropdown.dataProvider = fieldlist;
				dropdown.styleName="myFontStyle";
				dropdown.id="dropdown";
	
				OKButton.styleName="myFontStyle";
				OKButton.label="OK";
				OKButton.addEventListener(MouseEvent.CLICK, selectNewField);
				
				CancelFieldButton.styleName="myFontStyle";
				CancelFieldButton.label="Cancel";
				CancelFieldButton.addEventListener(MouseEvent.CLICK, cancelNewField);
			}
		
			private function addField():void {
				this.addbutton.enabled=false;
				this.addChild(dropdown);
				dropdown.x=10;
				dropdown.y=addbutton.y;
				addbutton.y = addbutton.y+60;

				this.addChild(OKButton);
				OKButton.x=250;
				OKButton.y=dropdown.y;
				
				this.addChild(CancelFieldButton);
				CancelFieldButton.x=320
				CancelFieldButton.y=dropdown.y
				
				
			}
			
			public function getDocument():void{
				trace("addDoc popup");
				docTree=new Tree();
				docTree.dataProvider = mx.core.Application.application.myDocs;
				docTree.labelField = "@label";
				getDoc = new Panel();
				getDoc.title = "Add Documents to Job";
				var cb:ControlBar = new ControlBar();
				var spacerThing:Spacer = new Spacer();
				var instruction:Text = new Text();
				instruction.text = "Select document to add to Job:";
				var addButton:Button = new Button();
				addButton.label = "Add";
				addButton.addEventListener(MouseEvent.CLICK, chooseDoc);
				var cancelButton:Button = new Button();
				cancelButton.label="Cancel";
				cancelButton.addEventListener(MouseEvent.CLICK, cancelChoose);
				cb.addChild(spacerThing);
				cb.addChild(addButton);
				cb.addChild(cancelButton);
				var dvb:VBox=new VBox();
				dvb.addChild(instruction);
				dvb.addChild(docTree);
				dvb.setStyle("paddingBottom", 10);
                dvb.setStyle("paddingLeft", 10);
                dvb.setStyle("paddingRight", 10);
                dvb.setStyle("paddingTop", 10);
                dvb.setStyle("horizontalAlign","left");
				getDoc.addChild(dvb);
				getDoc.addChild(cb);
				
				PopUpManager.addPopUp(getDoc, this, true);
                PopUpManager.centerPopUp(getDoc);
			
			}
			
			private function chooseDoc(evt:Event):void{
				var myDocXML:XML = docTree.selectedItem as XML;
				if (myDocXML!=null){
				var myDoc:Doc;
				var docList:ArrayCollection=mx.core.Application.application.docList;
				//get the actual doc
				for (var i:int = 0; i < docList.length; ++i){
	                               var doc:Doc = docList[i];
	                               if(doc.title == myDocXML.attribute("label")){
	                                       myDoc = doc;
	                               }
	                       }
				//get the current job
				//var myJobWindow:JobWindow = mx.core.Application.application.currentJobWindow;
				//display associations
				this.docs.addItem(myDoc.title);}
				PopUpManager.removePopUp(getDoc);
			}
			
			private function cancelChoose(evt:Event):void{
				PopUpManager.removePopUp(getDoc);
			}
			
			private function cancelNewField(evt:MouseEvent):void{
				this.addbutton.enabled=true;
				this.removeChild(dropdown);
				addbutton.y = addbutton.y-50;
				this.removeChild(OKButton);
				this.removeChild(CancelFieldButton);
			}


			private function selectNewField(event:MouseEvent):void{
				if (dropdown.selectedItem=="Interview Date") {
					this.removeChild(OKButton);
					this.removeChild(CancelFieldButton);
					this.addbutton.enabled=true;
					var date:Label = new Label();
					date.text="Date:";
					date.styleName="myFontStyle";
					this.addChild(date);	
					date.x=150;
				    date.y=dropdown.y;
					
					datechoose.styleName="myFontStyle";
					this.addChild(datechoose);
					datechoose.x=225;
					datechoose.y = dropdown.y;
					addbutton.y = addbutton.y+60;
					
					var time:Label = new Label();
					time.text="Time:";
					time.styleName="myFontStyle";
					this.addChild(time);	
					time.x=375;
				    time.y=dropdown.y;
				    
					Tinput.styleName="myFontStyle";
					this.addChild(Tinput);
					Tinput.x=435;
					Tinput.y=dropdown.y;
				    
				    
				    var place:Label = new Label();
					place.text="Place:";
					place.styleName="myFontStyle";
					this.addChild(place);	
					place.x=150;
				    place.y=dropdown.y+50;
					
					Pinput.styleName="myFontStyle";
					this.addChild(Pinput);
					Pinput.x=225;
					Pinput.y=dropdown.y+50;
				    
					var interviewdatetext:Label = new Label();
					interviewdatetext.text="Interview:";
					interviewdatetext.styleName="myFontStyle";
					this.addChild(interviewdatetext);	
					interviewdatetext.x=dropdown.x;
					interviewdatetext.y=dropdown.y;
					this.removeChild(dropdown);			
				}
				else if (dropdown.selectedItem =="Notes"){
					this.removeChild(OKButton);
					
					this.removeChild(CancelFieldButton);
					this.addbutton.enabled=true;

					input.styleName="myFontStyle";
					input.width = 439;
					input.height = 50;
					this.addChild(input);
					input.x=160;
					input.y=dropdown.y;	
					var textlabel:Label = new Label();
					textlabel.text=dropdown.selectedItem.toString();
					textlabel.styleName="myFontStyle";
					this.addChild(textlabel);	
					textlabel.x=dropdown.x;
					textlabel.y=dropdown.y;
					this.removeChild(dropdown);			
				}
				else if (dropdown.selectedItem =="Recommender"){
					this.removeChild(OKButton);
					var input2:TextInput = new TextInput();
					input2.styleName="myFontStyle";
					this.addChild(input2);
					input2.x=250;
					input2.y=dropdown.y;	
					var textlabel2:Label = new Label();
					textlabel2.text=dropdown.selectedItem.toString();
					textlabel2.styleName="myFontStyle";
					this.addChild(textlabel2);	
					textlabel2.x=dropdown.x;
					textlabel2.y=dropdown.y;
					this.removeChild(dropdown);			
				}
				
			}
			



			
			

			

		
		]]>
	</mx:Script>
		<mx:TextArea x="161" y="129" width="438" height="121" id="jobrequirements" fontSize="18"/>
		<mx:Button id="docbutton" x="567" y="258" label="+" width="32" height="30" click="getDocument()" fontSize="12"/>
		<mx:List x="161" y="258" width="398" height="64" dataProvider="{docs}" fontSize="18"></mx:List>
		<mx:Label x="10" y="258" text="Documents:" fontSize="18"/>
	
</mx:TitleWindow>
